{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Examples to develop and configure Watson Assistant extensions APIs","text":"<p>The objective of this repository is to provide several simple implementation examples of applications, which will be integrated as an extension to IBM Cloud Watson Assistant service. </p> <p>Each application needs to have an Open API specification (3.0 is supported).</p> <p>This repository contains the source code and the steps how to do the setup and use the extension in the IBM Cloud Watson Assistant service. You can also visit the Assistant-Toolkit to get started with the development and usage of custom extensions.</p> <p>Here is a <code>1-hour</code> YouTube <code>live stream</code> related to this repository.</p> <p></p>"},{"location":"#used-ibm-cloud-services","title":"Used IBM Cloud services","text":"<ul> <li>IBM Cloud Watson Assistant service The service will be used with a \"lite plan\" which creates no costs and limited usage.</li> <li>IBM Cloud Code Engine Serverless platform to run job or containers. Will be used with \"pay as you use\" , but the service provides a free tier.</li> </ul> <p>The diagram shows the simplified architecture dependencies of the running example on IBM Cloud.</p> <p></p>"},{"location":"#simplified-architecture-dependencies","title":"Simplified architecture dependencies","text":"<p>The following diagram displays the simplified architecture dependencies inside a <code>Watson Assistant Service</code>. In the examples we are going to integrate a <code>custom extension</code> to an <code>assistant instance</code>. </p> <p></p> <ol> <li> <p>Add a custom extensions</p> <ol> <li>We have an <code>assistant instance</code> inside <code>Watson Assistant service</code>.</li> <li>The <code>assistant instance</code> simplified contains <code>environments</code>, <code>integrations</code> and <code>actions</code>.</li> <li>The integrations do contain a catalog of extensions.</li> <li>The extension catalog contains <code>Out-Of-The-Box</code> and maybe <code>custom</code> extensions.</li> <li>A <code>custom extension</code> uses an Open API specification of an application to consume the  REST API provided by this application.</li> </ol> </li> <li> <p>Make a custom extension available for usage in an action.</p> <ol> <li>Add the custom extension the <code>environments</code> of the <code>assistant instance</code>.</li> </ol> </li> <li> <p>Use the <code>custom extension</code> in a <code>step</code> of an <code>action</code>.</p> </li> </ol>"},{"location":"#topics-for-each-example","title":"Topics for each example","text":"<ul> <li>Local development and containerization</li> <li>Deployment to <code>Code Engine</code></li> <li>Creation of an <code>Open API</code> documentation</li> <li>Set up of the integration between the <code>custom extension</code> and an <code>assistant instance</code></li> </ul>"},{"location":"#simple-coding-examples","title":"Simple coding examples","text":"<ul> <li>Node.js with <code>basic authenication</code></li> <li>Quarkus (planned) with OpenID connect </li> </ul>"},{"location":"additional-resources/","title":"Additional resources","text":"<p>Here are some additional and useful resources.</p>"},{"location":"additional-resources/#links","title":"Links","text":"<ul> <li> <p>OpenAPI related</p> <ul> <li>SwaggerHub Here you can verify your Swagger or OpenAPI documentation.</li> <li>OpenAPI Tools \"OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec (both 2.0 and 3.0 are supported).\"</li> <li>Smartbear SwaggerHub tutorials</li> </ul> </li> <li> <p>Watson Assistant related</p> <ul> <li>Assistant-Toolkit</li> <li>Build an extension</li> <li>Add an extension to an evironment</li> <li>Calling an extension from an action</li> <li>Managing user identity information</li> <li>Securing the web chat</li> </ul> </li> <li> <p>Code Engine related</p> <ul> <li>Jumpstart: Deploy a Java Microservices Application to <code>Code Engine</code></li> <li>Get started</li> </ul> </li> </ul>"},{"location":"nodejs-application-deployment-codeengine/","title":"Deploy to <code>Code Engine</code>","text":""},{"location":"nodejs-application-deployment-codeengine/#1-resources-we-are-going-to-create","title":"1. Resources we are going to create","text":"<p>We will create following in <code>Code Engine</code> resources.</p> <ul> <li>One project</li> <li>One application</li> <li>Two secrets</li> </ul> <p>Locally we will create the Open API <code>JSON</code> and <code>YAML</code> with the correct application URL:</p> <ul> <li><code>assistant-extension.json</code></li> <li><code>assistant-extension.yaml</code></li> </ul>"},{"location":"nodejs-application-deployment-codeengine/#deploy-the-application","title":"Deploy the application","text":""},{"location":"nodejs-application-deployment-codeengine/#step-1-verify-the-automation-deploy-applicationsh-for-the-registry-and-repository-and-the-image-tag","title":"Step 1: Verify the automation <code>deploy-application.sh</code> for the registry and repository and the image tag.","text":"<pre><code>export REGISTRY=\"quay.io\"\nexport REPOSITORY=tsuedbroecker\n...\nexport COMMONTAG=\"v0.0.3\"\nexport EXTENSION_IMAGE=\"$REGISTRY/$REPOSITORY/nodejs-assistant-extension:$COMMONTAG\"\n</code></pre>"},{"location":"nodejs-application-deployment-codeengine/#step-2-execute-following-commands","title":"Step 2: Execute following commands","text":"<pre><code>cd code/node-js-extension\nexport ROOTFOLDER=$(pwd)\nexport MYPROJECT=ce-assistant-extension\nexport RESOURCE_GROUP=default\nexport REGION=eu-de\n\nibmcloud login (-sso)\nibmcloud target -r $REGION -g $RESOURCE_GROUP\n\nsh ./deploy-application.sh\n</code></pre>"},{"location":"nodejs-application-deployment-codeengine/#step-3-verify-the-output","title":"Step 3: Verify the output","text":"<p>The output shows the URL of the <code>Code Engine</code> application.</p> <pre><code>************************************\n URLs\n************************************\n - Extension  : https://assistant-extension.v1j51p93c1o.eu-de.codeengine.appdomain.cloud\n</code></pre>"},{"location":"nodejs-application-deployment-codeengine/#step-4-insert-following-url-in-your-browser-httpapplication_urlv1getmessage","title":"Step 4: Insert following URL in your browser <code>http://[APPLICATION_URL]/v1/getmessage</code>","text":""},{"location":"nodejs-application-deployment-codeengine/#step-5-insert-into-the-requested-login-in-your-browser-the-values-for-user-and-password-as-admin","title":"Step 5: Insert into the requested login in your browser the values for user and password as <code>admin</code>.","text":""},{"location":"nodejs-application-deployment-codeengine/#step-6-verify-the-output","title":"Step 6: Verify the output","text":"<p>You should get this output <code>\"{\"message\":\"Code Engine usage\"}\"</code>scaled</p>"},{"location":"nodejs-application-development/","title":"Application development","text":"<p>The application is implemented in the <code>code/node-js-extension/server.js</code> file. Please verify the bash automation scripts to configure to your needs when needed.</p> <ul> <li><code>code/node-js-extension/build-and-verify-container.sh</code></li> <li><code>code/node-js-extension/build-and-push-container.sh</code></li> </ul>"},{"location":"nodejs-application-development/#1-run-nodejs-application-locally","title":"1. Run Node.js application locally","text":""},{"location":"nodejs-application-development/#step-1-execute-following-commands","title":"Step 1: Execute following commands:","text":"<pre><code>cd code/node-js-extension\ncp .env_template .env\nnpm install\nnode server.js\n</code></pre>"},{"location":"nodejs-application-development/#step-2-verify-the-output","title":"Step 2: Verify the output","text":"<p>You should get this output:</p> <pre><code>extension backend is running\n</code></pre>"},{"location":"nodejs-application-development/#step-3-insert-following-url-in-your-browser-httplocalhost3000v1getmessage","title":"Step 3: Insert following URL in your browser <code>http://localhost:3000/v1/getmessage</code>","text":""},{"location":"nodejs-application-development/#step-4-insert-into-the-requested-login-in-your-browser-the-values-for-user-and-password-as-admin","title":"Step 4: Insert into the requested login in your browser the values for user and password as <code>admin</code>.","text":""},{"location":"nodejs-application-development/#step-5-verify-the-output","title":"Step 5: Verify the output","text":"<p>You should get this output <code>\"{\"message\":\"Example usage\"}\"</code></p>"},{"location":"nodejs-application-development/#2-run-the-container-locally","title":"2. Run the container locally","text":""},{"location":"nodejs-application-development/#step-1-execute-following-commands_1","title":"Step 1: Execute following commands:","text":"<pre><code>cd code/node-js-extension\nsh build-and-verify-container.sh\n</code></pre>"},{"location":"nodejs-application-development/#step-2-verify-the-output_1","title":"Step 2: Verify the output","text":"<p>You should get this output:</p> <pre><code>extension backend is running\n</code></pre>"},{"location":"nodejs-application-development/#step-3-insert-following-url-in-your-browser-httplocalhost3000v1getmessage_1","title":"Step 3: Insert following URL in your browser <code>http://localhost:3000/v1/getmessage</code>","text":""},{"location":"nodejs-application-development/#step-4-insert-into-the-requested-login-in-your-browser-the-values-for-user-and-password-as-admin_1","title":"Step 4: Insert into the requested login in your browser the values for user and password as <code>admin</code>.","text":""},{"location":"nodejs-application-development/#step-5-verify-the-output_1","title":"Step 5: Verify the output","text":"<p>You should get this output <code>\"{\"message\":\"Example usage\"}\"</code></p>"},{"location":"nodejs-application-development/#3-push-container-to-container-registry","title":"3. Push container to container registry","text":"<p>Here you need to configure your container engine and your container registry in the related bash automation * <code>build-and-push-container.sh</code>.</p> <pre><code>export IMAGE_NAME=nodejs-assistant-extension:v0.0.3\nexport URL=quay.io\nexport REPOSITORY=tsuedbroecker\nexport CONTAINER_RUNTIME=podman\n</code></pre>"},{"location":"nodejs-application-development/#step-1-execute-following-commands_2","title":"Step 1: Execute following commands:","text":"<pre><code>cd code/node-js-extension\nsh build-and-push-container.sh\n</code></pre>"},{"location":"nodejs-application-development/#step-2-verify-the-output_2","title":"Step 2: Verify the output","text":"<pre><code>Successfully tagged quay.io/tsuedbroecker/nodejs-assistant-extension:v0.0.3\n</code></pre>"},{"location":"nodejs-application-extension-assistant/","title":"The setup the extension integration to <code>Watson Assistant</code>","text":"<p>With the IBM Cloud <code>lite plan</code> instance of a <code>Watson Assistant service</code>, you are allowed to [use one <code>custom extension</code>].</p>"},{"location":"nodejs-application-extension-assistant/#1-add-the-extension-to-integrations-of-the-current-assistant","title":"1. Add the extension to integrations of the current assistant","text":""},{"location":"nodejs-application-extension-assistant/#step-1-open-your-assistant","title":"Step 1: Open your <code>assistant</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-2-select-integrations","title":"Step 2: Select <code>integrations</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-3-on-the-integrations-page-find-extensions-and-press-the-button-build-custom-extension","title":"Step 3: On the <code>integrations</code> page find <code>Extensions</code> and press the button <code>Build custom extension</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-4-the-custom-extension-wizard-appears-and-guides-you-to-following-tasks","title":"Step 4: The <code>Custom extension</code> wizard appears and guides you to following tasks","text":"<ul> <li> <p>Basic information</p> <ul> <li>Extension name: <code>Assistant-extension API for a Node.js application</code></li> <li>Description: <code>Assistant-extension API for a Node.js application which needs to be integrated with Watson Assistant.</code></li> </ul> </li> <li> <p>Import your OpenAPI document</p> <ul> <li>Use following file: <code>code/node-js-extension/assistant-extension.json</code></li> </ul> </li> <li> <p>Review extension The image below an example of the OpenAPI</p> <p></p> </li> </ul>"},{"location":"nodejs-application-extension-assistant/#step-5-press-finish","title":"Step 5: Press <code>Finish</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-6-verify-the-extension-available-in-the-catalog","title":"Step 6: Verify the extension available in the catalog","text":"<p>Now is the extension available in the catalog as you can see in the image below:</p> <p></p>"},{"location":"nodejs-application-extension-assistant/#2-add-the-extension-to-the-environments-of-the-assistant","title":"2. Add the extension to the environments of the assistant","text":""},{"location":"nodejs-application-extension-assistant/#step-1-select-integrations","title":"Step 1: Select <code>integrations</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-2-on-the-integrations-page-find-extensions","title":"Step 2: On the <code>integrations</code> page find <code>Extensions</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-3-select-in-the-extensions-select-the-newly-created-assistant-extension-api-for-a-nodejs-application-in-your-catalog-and-press-add","title":"Step 3: Select in the <code>Extensions</code> select the newly created <code>Assistant-extension API for a Node.js application</code> in your catalog and press <code>Add</code>.","text":""},{"location":"nodejs-application-extension-assistant/#step-4-confirme-to-add","title":"Step 4: Confirme to <code>Add</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-5-a-wiszard-appears-and-guides-you-to-following-tasks","title":"Step 5: A wiszard appears and guides you to following tasks","text":"<ul> <li> <p>Configure authentication</p> <p></p> </li> <li> <p>Review operations</p> <p></p> </li> <li> <p>Press <code>Save</code> and the press <code>Close</code></p> </li> </ul>"},{"location":"nodejs-application-extension-assistant/#step-6-select-the-environments","title":"Step 6: Select the <code>Environments</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-7-in-the-environments-you-can-notice-that-the-assistant-extension-api-for-a-nodejs-application-is-available-in-the-draft-and-live-environments","title":"Step 7: In the <code>Environments</code> you can notice that the <code>Assistant-extension API for a Node.js application</code> is available in the <code>Draft</code> and <code>Live</code> environments","text":""},{"location":"nodejs-application-extension-assistant/#3-use-the-assistant-extension-api-for-a-nodejs-application-in-an-action","title":"3. Use the <code>Assistant-extension API for a Node.js application</code> in an action","text":""},{"location":"nodejs-application-extension-assistant/#step-1-create-a-new-action-call-get-message","title":"Step 1: Create a new action call <code>Get message</code>","text":""},{"location":"nodejs-application-extension-assistant/#step-2-create-the-step-1-without-a-condition","title":"Step 2: Create the <code>Step 1</code> without a condition","text":""},{"location":"nodejs-application-extension-assistant/#step-3-insert-following-text-into-assistant-says-editor","title":"Step 3: Insert following text into <code>Assistant says</code> editor","text":"<pre><code>Please wait while I retrieve your message ...\n</code></pre>"},{"location":"nodejs-application-extension-assistant/#step-4-select-in-and-then-the-use-an-extension-option-now-we-can-use-the-response-values-from-our-extension","title":"Step 4: Select in <code>And then ...</code> the <code>Use an extension</code> option. Now we can use the response values from our extension.","text":""},{"location":"nodejs-application-extension-assistant/#step-5-create-the-step-2-without-a-condition","title":"Step 5: Create the <code>Step 2</code> without a condition","text":""},{"location":"nodejs-application-extension-assistant/#step-6-insert-following-text-into-assistant-says-editor","title":"Step 6: Insert following text into <code>Assistant says</code> editor","text":"<p><pre><code>Your message is: $body.message\n</code></pre> </p>"},{"location":"nodejs-application-extension-assistant/#step-7-select-in-and-then-the-end-the-action-option","title":"Step 7:  Select in <code>And then ...</code> the <code>End the action</code> option","text":""},{"location":"nodejs-application-extension-assistant/#step-8-test-the-action","title":"Step 8:  Test the <code>action</code>","text":"<p>Note: Ensure that the application in code engine is up and running and not scaled to zero. Visit your Code Engine project.</p> <p></p>"},{"location":"nodejs-application-extension-assistant/#5-links-to-useful-resources","title":"5. Links to useful resources","text":"<ol> <li>IBM Cloud documentation for Watson Assistant to build an extension</li> <li>IBM Cloud documentation for Watson Assistant to add an extension to an evironment</li> <li>IBM Cloud documentation for Watson Assistant calling an extension from an action</li> </ol>"},{"location":"nodejs-application-nodejs/","title":"Node.js application example","text":""},{"location":"nodejs-application-nodejs/#1-functionality","title":"1. Functionality","text":"<p>The example application does provide a simple REST API to get a message. This simple message we will later display in an <code>assistant instance</code> of the IBM Cloud Watson Assistant service.</p> <p></p>"},{"location":"nodejs-application-nodejs/#2-security","title":"2. Security","text":"<p>The example application is protected by basic authentication (<code>base64 encoded</code>).</p>"},{"location":"nodejs-application-nodejs/#3-configuration","title":"3. Configuration","text":"<ul> <li>The message which is provided by the REST API is configured by an environment variable.</li> <li>The user and password are also configured by an environment variables.</li> </ul>"},{"location":"nodejs-application-nodejs/#4-containerized","title":"4. Containerized","text":"<ul> <li>The application is containerized and the environment variables are externalized.</li> </ul>"},{"location":"nodejs-application-nodejs/#5-tested-runtimes","title":"5. Tested runtimes","text":"<ol> <li>Local as Node.js application</li> <li> <p>Containerized versions</p> <ul> <li>Local with Podman</li> <li>IBM Cloud \"Code Engine\" </li> </ul> </li> </ol>"},{"location":"nodejs-application-openapi-specification/","title":"Create OpenAPI/swagger 3.0.0 documentation","text":"<p>On SwaggerHub you can verify your Swagger or OpenAPI documentation created manually or by an automation.</p> <p></p>"},{"location":"nodejs-application-openapi-specification/#1-openapi-specification","title":"1. OpenAPI Specification","text":"<p>This is the documentation which was created manually. Just get a bit familiar with the documentation.</p> <ul> <li>YAML</li> </ul> <pre><code>openapi: 3.0.0\ninfo:\n  version: v1\n  title: assistant-extension API for a Node.js application\n  description: Assistant-extension API for a Node.js application documentation to be integrated with Watson Assistant.\n\nservers:\n  - description: Code Engine application\n    url: https://YOUR_APPLICATION_URL/v1\n\nsecurity:\n  - basicAuth: []\n\npaths:\n  /getmessage:\n    get:\n      description: Returns a simple message\n      responses:\n        '200':\n          description: 200 message returned\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '401':\n          description: 401 Access denied\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n</code></pre> <ul> <li>JSON</li> </ul> <pre><code>{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"assistant-extension API for a Node.js application\",\n    \"version\": \"v1\",\n    \"description\": \"Assistant-extension API for a Node.js application documentation to be integrated with Watson Assistant.\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://YOUR_APPLICATION_URL/v1\",\n      \"description\": \"Code Engine application\"\n    }\n  ],\n  \"security\": [\n     {\"basicAuth\":[]}\n  ],\n  \"paths\": {\n    \"/getmessage\": {\n      \"get\": {\n        \"description\": \"Returns a simple message\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"200 message returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"401 Access denied\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"basicAuth\" : {\n        \"type\": \"http\",\n        \"scheme\": \"basic\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"nodejs-application-openapi-specification/#2-links-to-useful-resources","title":"2. Links to useful resources","text":"<ul> <li>SwaggerHub Here you can verify your Swagger or OpenAPI documentation.</li> <li>OpenAPI Tools \"OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec (both 2.0 and 3.0 are supported).\"</li> <li>Smartbear SwaggerHub tutorials</li> </ul>"},{"location":"nodejs-application-prerequisites/","title":"Prerequisites","text":"<p>To follow all steps of the examples you need to fulfil these prerequisites.</p> <ul> <li>IBM Cloud account</li> <li>An IBM Cloud Watson Assistant instance with one <code>assistant instance</code> containing in minimum one action (lite plan will be enough)</li> <li>IBM Cloud CLI and Code Engine plugin installed on the local computer</li> <li>Install Node.js on the local computer</li> <li>Podman or Docker on the local computer</li> <li>Connected to a container registry for example to Quay.io on the local computer</li> </ul>"},{"location":"objectives/","title":"Objective","text":"<p>The objective of this repository is to provide several simple implementation examples of applications, which will be integrated as an extension to IBM Cloud Watson Assistant service. You can also visit the Assistant-Toolkit to get started with the development and usage of custom extensions.</p> <p>Each application needs to have an Open API specification (both 2.0 and 3.0 are supported).</p> <p>This repository contains the source code and the steps how to do the setup and use the extension in the IBM Cloud Watson Assistant service.</p>"},{"location":"objectives/#step-1-clone-the-repository-to-your-local-machine","title":"Step 1: Clone the repository to your local machine","text":"<pre><code>git clone https://github.com/thomassuedbroecker/extension-apis.git\n</code></pre>"}]}